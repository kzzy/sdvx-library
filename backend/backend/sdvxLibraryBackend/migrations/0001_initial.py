# Generated by Django 4.2.6 on 2023-10-09 10:39

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SongResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('duration', models.CharField(max_length=5)),
                ('bpm', models.CharField(max_length=20)),
                ('artist', models.CharField(max_length=75)),
                ('effector', models.CharField(max_length=75)),
                ('album', models.CharField(max_length=75)),
                ('is_arcade', models.BooleanField()),
                ('is_konasute', models.BooleanField()),
                ('konasute_volume_pack', models.IntegerField()),
                ('release_date', models.DateTimeField()),
                ('konasute_unlock_method', models.CharField(choices=[('BLASTERGATE_DEFAULT', 'Default Blaster Gate'), ('BLASTERGATE_EVENT', 'Event Blaster Gate'), ('BASE', 'Base Unlock'), ('VOLUMEPACK', 'Volume Pack Unlock')], max_length=20)),
                ('arcade_unlock_method', models.CharField(choices=[('PCB', 'PCB Unlock'), ('BLASTERGATE', 'Default Blaster Gate'), ('HEXADIVER', 'Hexa Diver'), ('OMEGADIMENSION', 'Omega Dimension')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Chart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('difficulty_name', models.CharField(choices=[('NVC', 'Novice'), ('ADV', 'Advanced'), ('EXH', 'Exhaust'), ('INF', 'Infinite'), ('GRV', 'Gravity'), ('MXM', 'Maximum'), ('HVN', 'Heavenly'), ('VVD', 'Vivid'), ('XCD', 'Exceed')], max_length=10)),
                ('level', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('release_date', models.DateTimeField()),
                ('tier', models.CharField(max_length=2)),
                ('diff_is_arcade', models.BooleanField()),
                ('diff_is_konasute', models.BooleanField()),
                ('jacket_filename', models.CharField(max_length=100)),
                ('jacket_artist', models.CharField(max_length=50)),
                ('max_chain', models.IntegerField(default=None)),
                ('max_chip_notes', models.IntegerField(default=None)),
                ('max_long_notes', models.IntegerField(default=None)),
                ('max_vol_notes', models.IntegerField(default=None)),
                ('radar_notes', models.IntegerField(default=None, validators=[django.core.validators.MinValueValidator(0)])),
                ('radar_peak', models.IntegerField(default=None, validators=[django.core.validators.MinValueValidator(0)])),
                ('radar_tsumami', models.IntegerField(default=None, validators=[django.core.validators.MinValueValidator(0)])),
                ('radar_onehanded', models.IntegerField(default=None, validators=[django.core.validators.MinValueValidator(0)])),
                ('radar_handtrip', models.IntegerField(default=None, validators=[django.core.validators.MinValueValidator(0)])),
                ('radar_tricky', models.IntegerField(default=None, validators=[django.core.validators.MinValueValidator(0)])),
                ('song_title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sdvxLibraryBackend.songresult')),
            ],
        ),
    ]
