# Generated by Django 4.2.6 on 2023-10-18 11:59

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True)),
                ('duration', models.CharField(max_length=5)),
                ('bpm', models.CharField(max_length=20)),
                ('artist', models.CharField(max_length=75)),
                ('effector', models.CharField(max_length=75)),
                ('album', models.CharField(default='N/A', max_length=75)),
                ('isArcade', models.BooleanField(null=True)),
                ('isKonasute', models.BooleanField(null=True)),
                ('konasuteVolumePack', models.IntegerField(default=-1)),
                ('releaseDate', models.DateField()),
                ('konasuteUnlockMethod', models.CharField(blank=True, choices=[('BLASTERGATE_DEFAULT', 'Default Blaster Gate'), ('BLASTERGATE_EVENT', 'Event Blaster Gate'), ('BASE', 'Base Unlock'), ('VOLUMEPACK', 'Volume Pack Unlock')], max_length=20)),
                ('arcadeUnlockMethod', models.CharField(blank=True, choices=[('PCB', 'PCB Unlock'), ('BLASTERGATE', 'Default Blaster Gate'), ('HEXADIVER', 'Hexa Diver'), ('OMEGADIMENSION', 'Omega Dimension')], max_length=20)),
            ],
            options={
                'verbose_name': 'Song',
                'verbose_name_plural': 'Songs',
            },
        ),
        migrations.CreateModel(
            name='Chart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('difficultyName', models.CharField(choices=[('NVC', 'Novice'), ('ADV', 'Advanced'), ('EXH', 'Exhaust'), ('INF', 'Infinite'), ('GRV', 'Gravity'), ('MXM', 'Maximum'), ('HVN', 'Heavenly'), ('VVD', 'Vivid'), ('XCD', 'Exceed')], max_length=10)),
                ('level', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('releaseDate', models.DateField()),
                ('tier', models.CharField(blank=True, max_length=2)),
                ('diffIsArcade', models.BooleanField()),
                ('diffIsKonasute', models.BooleanField()),
                ('jacketFilename', models.CharField(max_length=100)),
                ('jacketArtist', models.CharField(max_length=50)),
                ('maxChain', models.IntegerField(default=None)),
                ('maxChipNotes', models.IntegerField(default=None)),
                ('maxLongNotes', models.IntegerField(default=None)),
                ('maxVolNotes', models.IntegerField(default=None)),
                ('radarNotes', models.FloatField(default=None, validators=[django.core.validators.MinValueValidator(0)])),
                ('radarPeak', models.FloatField(default=None, validators=[django.core.validators.MinValueValidator(0)])),
                ('radarTsumami', models.FloatField(default=None, validators=[django.core.validators.MinValueValidator(0)])),
                ('radarOnehanded', models.FloatField(default=None, validators=[django.core.validators.MinValueValidator(0)])),
                ('radarHandtrip', models.FloatField(default=None, validators=[django.core.validators.MinValueValidator(0)])),
                ('radarTricky', models.FloatField(default=None, validators=[django.core.validators.MinValueValidator(0)])),
                ('songTitle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sdvxLibraryBackend.song')),
            ],
            options={
                'verbose_name': 'Chart',
                'verbose_name_plural': 'Charts',
            },
        ),
    ]
